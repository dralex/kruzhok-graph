0) Для запуска понадобятся python3 и дополнительные пакеты:
   - csv
   - igraph

1) Загрузить команды из Таланта в XLS по запросу https://tools.nti-contest.ru/metabase/question/910-komandy-v-talante
   Сконвертировать команды в CSV с разделителем : и квотингом через " в файл olddata/talent-export.csv

2) Запустить скрипт фильтрации и конвертации данных команд из Таланта convert-talent.py

3) Запустить скрипт шифрования имейлов hash-emails.py

4) Скопировать оставшиеся данные
   - даты мероприятий cp olddata/*-dates.csv data/
   - автосгенерированные команды cp olddata/talent-autoteams.csv data/

5) Запустить скрипт метчинга команд match-teams.py с включенным DEBUG без построения графа и проверить, что данные нормально загрузились

6) Поиграть с параметрами в скрипте match-teams.py

   - DEBUG - выводить отладочную информацию в консоль
   - TEAM_SIZE - минимальное число совпадений участников, чтобы считаться командой (обычно 2)
   - USE_GITHUB - использовать для подсчета статистики данные о наличии github-аккаунта
   - BUILD_GRAPH - строить граф связей (необходим для визуализации)
   - CALCULATE_CLUSTERS - подсчитать число связных подграфов
   - PLOT_GRAPH - визуализировать граф в PNG
   - FULL_GRAPH - строить полный граф (включая переходы между командами в 1 человека)
   - SKIP_SELECTION - отбрасывать связи между отборочными и финалами одного мероприятия 
   - PLOT_LABELS - отображать названия команд
   - LABELS_COLOR - цвет для названия команд
   - EDGES_COLOR - цвет для ребер в графе
   - USE_TOPICS - показывать статистику по темам
   - SAVE_CSV - сохранять устойчивые команды в файл csv
   - COLOR_SCHEME - раскрашивать вершины ('events' - по мероприятиям, 'sex' - по полу, 'reg' - по совпадению регионов)
   - PICTURE_SIZE - размер картинки в пикселях (обычно 4000)
   - FILTER_ORIGIN - строить граф только по определенным мероприятиям
   - FILTER_PARTICIPANT - строить граф только с определенным участником
   - FILTER_REGIONS - строить граф только по участникам из регионов (список номеров региона)
...

PROFIT!
